# print (5, 8, 6)
# n = 5
# print(type (n))

# print('Введите первое число: ')
# a = input()

# b = input('Введите второе число: ')

# print(a, ' + ', b , ' = ', a + b)

# -----------------------------------------------------------------------------
# ДЗ1 задача 1
# Найдите сумму цифр трехзначного числа n. Результат сохраните в перменную res.
# Пример:
# n = 123 -> res = 6 (1 + 2 + 3)
# n = 100 -> res = 1 (1 + 0 + 0)
# """
# При отправке кода на Выполнение раскомментируйте строку ниже, чтобы задать значение `n`
# При отправке решения на Проверку закомментируйте эту строку обратно - система автоматически подставит разные значения `n` для проверки
# """
# # n = 123
# # Введите ваше решение ниже
# n1 = n // 100 # целочисленное деление на 100 = 1
# n2 = (n % 100) // 10 # остаток от деления на 100 = 23, целочисленное деление на 10 = 2
# n3 = n % 10 # остаток от деления на 10 = 3
# res = n1 + n2 + n3 

# ДЗ1 задача 2
# Петя, Катя и Сережа делают из бумаги журавликов. Вместе они сделали n журавликов.
# Сколько журавликов сделал каждый ребенок, если известно, что Петя и Сережа сделали одинаковое количество журавликов, а Катя сделала в два раза больше журавликов, чем Петя и Сережа вместе?
# Выведите через пробел количество журавликов, сделанных Петей, Катей и Сережей.
# Пример:
# n = 6 -> 1 4 1  
# n = 24 -> 4 16 4    
# n = 60 -> 10 40 10 
# """
# При отправке кода на Выполнение раскомментируйте строку ниже, чтобы задать значение `n`
# При отправке решения на Проверку закомментируйте эту строку обратно - система автоматически подставит разные значения `n` для проверки
# """
# #n = 6
# # Введите ваше решение ниже
# c = n // 3 * 2
# p = n // 3 // 2
# print (p, c, p)

#ДЗ1 задача 3
# Вы пользуетесь общественным транспортом? Вероятно, вы расплачивались за проезд и получали билет с номером.
# Счастливым билетом называют такой билет с шестизначным номером, где сумма первых трех цифр равна сумме последних трех.
# Т.е. билет с номером 385916 – счастливый, т.к. 3+8+5=9+1+6.
# Вам требуется написать программу, которая проверяет счастливость билета с номером n и выводит на экран yes или no.
# Пример:
# n = 385916 -> yes
# n = 123456 -> no
# """
# При отправке кода на Выполнение раскомментируйте строку ниже, чтобы задать значение `n`
# При отправке решения на Проверку закомментируйте эту строку обратно - система автоматически подставит разные значения `n` для проверки
# """
# # n = 385916
# # Введите ваше решение ниже
# c = (n // 100000) + (n // 10000 % 10) + (n // 1000 % 10)
# d = (n // 100 % 10) + (n // 10 % 10) + (n % 10)
# if c == d:
#     print ("yes")
# else:
#     print ("no")

# ДЗ 1 Задача 4
# Определите, можно ли от шоколадки размером a × b долек отломить c долек, если разрешается сделать один разлом по прямой между дольками (то есть разломить шоколадку на два прямоугольника).
# Выведите yes или no соответственно.
# Пример:
# a, b, c = 3, 2, 4 -> yes
# a, b, c = 3, 2, 1 -> no
# """
# При отправке кода на Выполнение раскомментируйте строку ниже, чтобы задать значения `a`, `b`, `c`
# При отправке решения на Проверку закомментируйте эту строку обратно - система автоматически подставит разные значения `a`, `b`, `c` для проверки
# """
# # a = 3
# # b = 2
# # c = 4
# # Введите ваше решение ниже
# if c <= a * b and (c % a == 0 or c % b == 0):
#     print("yes") 
# else:
#     print("no")

# Задача №9. Решение в группах
# По данному целому неотрицательному n вычислите
# значение n!. N! = 1 * 2 * 3 * … * N (произведение всех
# чисел от 1 до N) 0! = 1 Решить задачу используя цикл
# while
# Input: 5
# Output: 120

# n = int(input())
# i = 1
# result = 1
# while i <= n:
#     result *= i
#     i += 1
# print (result)

# Задача №11. Решение в группах
# Дано натуральное число A > 1. Определите, каким по
# счету числом Фибоначчи оно является, то есть
# выведите такое число n, что φ(n)=A. Если А не
# является числом Фибоначчи, выведите число -1.
# Input: 5
# Output: 6 
# В математике последовательность 
# Фибоначчи — это последовательность, 
# в которой каждое число представляет собой сумму двух предыдущих. 
# Числа, являющиеся частью последовательности Фибоначчи, известны как числа Фибоначчи, 
# обычно обозначаемые Fₙ.

# #0 1 1 2 3 5 8 13

# n = int(input()) # вводим искомое число
# n0 = 0 # переменная для хранения результата сложения двух преддущих чисел
# n1 = 0 # переменная фибоначчи с индексом 0
# n2 = 1 # переменная фибоначчи с индексом 1
# i = 2 # порядковый номер числа фибоначчи

# while n0 < n:
#     n0 = n1 + n2
#     n1 = n2
#     n2 = n0
#     i += 1
#     if n0 > n:
#         i = -1
 
# print(i)

# Задача №13. Решение в группах
# Уставшие от необычно теплой зимы, жители решили узнать,
# действительно ли это самая длинная оттепель за всю историю
# наблюдений за погодой. Они обратились к синоптикам, а те, в
# свою очередь, занялись исследованиями статистики за
# прошлые годы. Их интересует, сколько дней длилась самая
# длинная оттепель. Оттепелью они называют период, в
# который среднесуточная температура ежедневно превышала
# 0 градусов Цельсия. Напишите программу, помогающую
# синоптикам в работе.
# Пользователь вводит число N – общее количество
# рассматриваемых дней (1 ≤ N ≤ 100). В следующих строках
# располагается N целых чисел.
# Каждое число – среднесуточная температура в
# соответствующий день. Температуры – целые числа и лежат в
# диапазоне от –50 до 50
# Input: 6 -> -20 30 -40 50 10 -10
# Output: 2

# n = int(input())
# k = 0
# max = 0
# for i in range(n):
#     x = int(input())
#     if x > 0:
#         k += 1
#     else:
#         if max < k:
#             max = k
#         k = 0
# print(max)

# Задача №15. Решение в группах
# 15. Иван Васильевич пришел на рынок и решил
# купить два арбуза: один для себя, а другой для тещи.
# Понятно, что для себя нужно выбрать арбуз
# потяжелей, а для тещи полегче. Но вот незадача:
# арбузов слишком много и он не знает как же выбрать
# самый легкий и самый тяжелый арбуз? Помогите ему!
# Пользователь вводит одно число N – количество
# арбузов. Вторая строка содержит N чисел,
# записанных на новой строчке каждое. Здесь каждое
# число – это масса соответствующего арбуза
# Input: 5 -> 5 1 6 5 9
# Output: 1 9

# n = int(input())
# max = -1
# min = 30001

# for i in range(n):
#     x = int(input())
#     if x > max:
#         max = x
#     if x < min:
#         min = x

# print(max, min)

#ДЗ 2 задача 1
# На столе лежат n монеток. Некоторые из монеток лежат вверх решкой, а некоторые – гербом. Ваша задача - определить минимальное количество монеток, которые нужно перевернуть, чтобы все монетки лежали одной и той же стороной вверх.
# Входные данные:
# На вход программе подается список coins, где coins[i] равно 0, если i-я монетка лежит гербом вверх, и равно 1, если i-я монетка лежит решкой вверх. Размер списка не превышает 1000 элементов.
# Выходные данные:
# Программа должна вывести одно целое число - минимальное количество монеток, которые нужно перевернуть.
# Пример использования На входе:
# coins = [0, 1, 0, 1, 1, 0]
# На выходе:
# 3
# coins = [0, 1, 0, 1, 1, 0]

# # Введите ваше решение ниже
# n0 = 0
# n1 = 0
# for i in coins:
#     if i == 0:
#         n0 += 1
#     if i == 1:
#         n1 += 1
# if n0 > n1:
#     print(n1)
# else:
#     print(n0)
    

